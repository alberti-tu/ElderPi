{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/service/authentication.service.ts","webpack:///./src/app/service/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { AuthenticationService } from './service/authentication.service';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'main',  component: MainComponent, canActivate: [AuthenticationService] },\n  { path: '**', redirectTo: '/login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ElderPi-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ng6-toastr-notifications';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainComponent } from './main/main.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot(),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".ng-valid[required] {\\n  border-left: 5px solid #42A948;\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLDhCQUE4QjtBQUNoQyIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctdmFsaWRbcmVxdWlyZWRdIHtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4O1xufVxuXG4ubmctaW52YWxpZDpub3QoZm9ybSkge1xuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNhOTQ0NDI7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Login</h1>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input id=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.username\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.password\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!form.form.valid\\\">Sign In</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\nimport { HttpService } from '../service/http.service';\nimport { User } from '../models/user';\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User;\n\n  constructor(private http: HttpService, private router: Router, private auth: AuthenticationService, private toast: ToastrManager) {\n    this.user = new User();\n  }\n\n  ngOnInit() {\n    if(AuthenticationService.validToken())\n      this.router.navigateByUrl('/main');\n  }\n\n  login() {\n    this.http.login(this.user).subscribe(result => {\n      if(result.token == '') return this.toast.errorToastr('Wrong email and / or password', 'You are not who I am waiting for');\n\n      AuthenticationService.setToken(result.token); // Save seasson token\n\n      this.toast.successToastr('Welcome ' + this.user.username, 'Correct Login');\n      this.router.navigateByUrl('/main');\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<table class=\\\"table table-bordered table-hover\\\">\\n  <thead class=\\\"thead-dark text-center\\\">\\n  <tr>\\n    <th scope=\\\"col\\\" *ngFor=\\\"let column of headTable\\\">{{column}}</th>\\n  </tr>\\n  </thead>\\n  <tbody class=\\\"text-center\\\">\\n  <tr *ngFor=\\\"let item of bodyTable\\\">\\n    <th scope=\\\"row\\\">{{item.deviceID}}</th>\\n    <td>{{item.precense ? 'Yes' : 'No'}}</td>\\n    <td>{{item.battery}}%</td>\\n    <td>{{item.timestamp | date:\\\"HH:mm:ss\\\" }}</td>\\n    <td>{{item.timestamp | date:\\\"dd/MM/yyyy\\\" }}</td>\\n  </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../service/http.service';\nimport { Sensor } from '../models/sensor';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  headTable: string[] = ['Device ID', 'Precense', 'Battery','Hour', 'Date'];\n  bodyTable: Sensor[];\n\n  constructor(private http: HttpService) {\n    this.selectAll();\n  }\n\n  ngOnInit() {  }\n\n  selectAll() {\n    this.http.sensor().subscribe(result => { return this.bodyTable = result });\n  }\n\n}\n","export class User {\n  public username: string;\n  public password: string;\n  public email: string;\n  public token: string;\n\n  constructor() {  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport * as jwt_decode from 'jwt-decode';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService implements CanActivate{\n\n  constructor(private router: Router) { }\n\n  canActivate() {\n    if (AuthenticationService.validToken()) return true;\n\n    this.router.navigateByUrl('/login');\n    return false;\n  }\n\n  static setToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n  static getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  // Return the UTC seconds until the expiration of the token\n  static getTokenExpirationDate(token: string): number {\n    const decoded = jwt_decode(token);\n    if (decoded.expiration === undefined) return null;\n    return new Date().setUTCSeconds(decoded.expiration).valueOf();\n  }\n\n  // Check if this token is valid\n  static validToken(): boolean {\n    if(AuthenticationService.getToken() == null) return false;\n\n    const expiration = AuthenticationService.getTokenExpirationDate( AuthenticationService.getToken() );\n    if(expiration === undefined) return false;\n\n    return expiration > new Date().valueOf();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { Sensor } from '../models/sensor';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpService {\n\n  constructor( private http: HttpClient ) { }\n\n  public login(user: User) {\n    return this.http.post<User>(location.origin + '/login', user);\n  }\n\n  public sensor() {\n    let tokenHeader = { headers: new HttpHeaders().set('authorization', AuthenticationService.getToken()) };\n    return this.http.get<Sensor[]>(location.origin + '/sensor', tokenHeader)\n  }\n}\n\n// HTTP response as plain text --> {responseType: 'text'}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}