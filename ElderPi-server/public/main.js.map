{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/models/user.ts","webpack:///./src/app/service/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-login></app-login>\\n\\n<!--\\n<form name=\\\"login\\\">\\n  <div class=\\\"login-container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Email</label>\\n          <input type=\\\"email\\\" name=\\\"email\\\" ng-model=\\\"user.username\\\" required class=\\\"form-control\\\">\\n          <div ng-show=\\\"myForm.email.$error.email\\\" class=\\\"error\\\">Invalid email!</div>\\n          <div ng-show=\\\"myForm.email.$error.required &amp;&amp; myForm.email.$touched\\\" class=\\\"error\\\">Required!</div>\\n</div>\\n</div>\\n<div class=\\\"col-md-12\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" name=\\\"pass\\\" ng-model=\\\"user.password\\\" required class=\\\"form-control\\\">\\n    <div ng-show=\\\"myForm.pass.$error.required &amp;&amp; myForm.pass.$touched\\\" class=\\\"error\\\">Required!</div>\\n  </div>\\n</div>\\n<div class=\\\"col-md-12\\\">\\n  <div class=\\\"form-group\\\">\\n    <button ng-click=\\\"login()\\\" ng-disabled=\\\"myForm.$invalid\\\" class=\\\"btn btn-success pull-right\\\">Login</button>\\n    <div class=\\\"clearfix\\\"></div>\\n  </div>\\n</div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <div ng-show=\\\"showError\\\" class=\\\"alert alert-danger\\\">Wrong credentials!</div>\\n    <div ng-show=\\\"showSuccess\\\" class=\\\"alert alert-success\\\">Login Successful!</div>\\n  </div>\\n</div>\\n</div>\\n</form>\\n\\n-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ElderPi-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }   from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ng6-toastr-notifications';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ToastrModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".ng-valid[required] {\\n  border-left: 5px solid #42A948;\\n}\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLDhCQUE4QjtBQUNoQyIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmctdmFsaWRbcmVxdWlyZWRdIHtcbiAgYm9yZGVyLWxlZnQ6IDVweCBzb2xpZCAjNDJBOTQ4O1xufVxuXG4ubmctaW52YWxpZDpub3QoZm9ybSkge1xuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNhOTQ0NDI7XG59XG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Login</h1>\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"username\\\">Username</label>\\n      <input id=\\\"username\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.username\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.password\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!form.form.valid\\\">Sign In</button>\\n  </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\nimport { HttpService } from '../service/http.service';\nimport { User } from '../models/user';\nimport {connectableObservableDescriptor} from 'rxjs/internal/observable/ConnectableObservable';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user: User;\n\n  constructor(private http: HttpService, private toast: ToastrManager) {\n    this.user = new User();\n  }\n\n  ngOnInit() {  }\n\n  login() {\n    this.http.login(this.user).subscribe(result => {\n      if(result == 1) this.toast.successToastr('Welcome ' + this.user.username, 'Correct Login');\n      else this.toast.errorToastr('Wrong email and / or password', 'You are not who I am waiting for')\n    });\n  }\n}\n","export class User {\n  public username: string;\n  public password: string;\n  public email: string;\n\n  constructor() {  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  private url: string = 'http://localhost:3000';\n\n  constructor( private http: HttpClient ) {}\n\n  public login(user: User) {\n    return this.http.post(this.url + '/login', user);\n  }\n}\n\n// HTTP response as plain text --> {responseType: 'text'}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}